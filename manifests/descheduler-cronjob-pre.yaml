# ConfigMap with descheduler policy
apiVersion: v1
kind: ConfigMap
metadata:
  name: descheduler-policy-configmap
  namespace: kube-system
data:
  policy.yaml: |
    apiVersion: "descheduler/v1alpha2"
    kind: "DeschedulerPolicy"
    profiles:
    - name: default
      pluginConfig:
      - name: "MultiObjective"
        args:
          weights:
            cost: 0.10
            disruption: 0.20
            balance: 0.70
      plugins:
        balance:
          enabled:
          - "MultiObjective"

---
# ServiceAccount for descheduler
apiVersion: v1
kind: ServiceAccount
metadata:
  name: descheduler
  namespace: kube-system

---
# ClusterRole for descheduler permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: descheduler
rules:
# Core permissions for descheduler operation
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch", "delete"]
- apiGroups: [""]
  resources: ["pods/eviction"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["replicasets", "deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["scheduling.k8s.io"]
  resources: ["priorityclasses"]
  verbs: ["get", "list", "watch"]

# Permissions for SchedulingHint CRs
- apiGroups: ["descheduler.io"]
  resources: ["schedulinghints"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Events for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]

---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: descheduler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: descheduler
subjects:
- kind: ServiceAccount
  name: descheduler
  namespace: kube-system
